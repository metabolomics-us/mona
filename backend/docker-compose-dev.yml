version: "3"

volumes:
  postgresql-data:
  repository-data:
  downloader-data:

services:
  #
  # Databases & Messaging
  #

  postgresql:
    image: postgres:13.4
    hostname: postgresql
    command: postgres -c shared_preload_libraries=pg_stat_statements -c pg_stat_statements.track=all -c max_connections=2000
    expose:
      - 5432
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=mona-test
      - POSTGRES_PASSWORD=test
      - "ES_JAVA_OPTS=-Xmx6g"
    volumes:
      - postgresql-data:/data

  rabbitmq:
    image: rabbitmq:3.10.10-management
    ports:
      - "15672:15672"
      - "5672:5672"
    logging:
      options:
        max-size: "100M"


  #
  # MoNA base services
  #

  # The discovery service provided us with a local overview of our services
  # and allows for easy scaling and load balancing using our proxy at a later stage
  discovery:
    image: public.ecr.aws/fiehnlab/mona-discovery:test
    ports:
      - "8761:8761"
    depends_on:
      - postgresql
    entrypoint: bash -c "./wait-for-it.sh postgresql:5432 -t 3600 --strict -- java $JAVA_OPTS -Dspring.cloud.config.server.git.username=$GIT_USER -Dspring.cloud.config.server.git.password=$GIT_PASS -Dspring.profiles.active=docker -jar *.jar"
    environment:
      - JAVA_OPTS='-Xmx2g -XX:+UseParallelGC'
      - GIT_USER=${GIT_USER}
      - GIT_PASS=${GIT_PASS}

  config-server:
    image: public.ecr.aws/fiehnlab/mona-config:test
    ports:
      - "1111:1111"
    depends_on:
      - postgresql
    entrypoint: bash -c "./wait-for-it.sh postgresql:5432 -t 3600 --strict -- java $JAVA_OPTS -Dspring.profiles.active=docker,prod -Dspring.cloud.config.server.git.username=$GIT_USER -Dspring.cloud.config.server.git.password=$GIT_PASS -jar *.jar"
    environment:
      - JAVA_OPTS='-Xmx2g -XX:+UseParallelGC'
      - GIT_USER=${GIT_USER}
      - GIT_PASS=${GIT_PASS}
    logging:
      options:
        max-size: "100M"


  #
  # Initial services to start up
  #

  # Bootstrap service which pre-populated and synchronizes the databases
  bootstrap:
    image: public.ecr.aws/fiehnlab/mona-bootstrap:test
    depends_on:
      - config-server
    entrypoint: bash -c "./wait-for-it.sh config-server:1111 -t 3600 --strict -- java -Xmx2g -XX:+UseParallelGC -Dspring.config.import=configserver:http://config-server:1111/ -Dspring.profiles.active=docker,prod -jar *.jar"
#
#  # Webhook support to notify external apis
  webhooks:
    image: public.ecr.aws/fiehnlab/mona-webhooks-server:test
    ports:
      - "4444:4444"
    depends_on:
      - config-server
    entrypoint: bash -c "./wait-for-it.sh config-server:1111 -t 3600 --strict -- java -Xmx2g -XX:+UseParallelGC -Dspring.config.import=configserver:http://config-server:1111/ -Dspring.profiles.active=docker,prod -jar *.jar"
#
#  # Scheduler for curation jobs
  curationScheduler:
    image: public.ecr.aws/fiehnlab/mona-curation-scheduler:test
    ports:
      - "5555:5555"
    depends_on:
      - config-server
    entrypoint: bash -c "./wait-for-it.sh config-server:1111 -t 3600 --strict -- java -Xmx2g -XX:+UseParallelGC -Dspring.config.import=configserver:http://config-server:1111/ -Dspring.profiles.active=docker,prod -jar *.jar"
#
#  # Serves the content of MoNA as a repository
  repository:
    image: public.ecr.aws/fiehnlab/mona-repository:test
    ports:
      - "8888:8888"
    depends_on:
      - config-server
    entrypoint: bash -c "./wait-for-it.sh config-server:1111 -t 3600 --strict -- java -Xmx2g -XX:+UseParallelGC -Dspring.config.import=configserver:http://config-server:1111/ -Dspring.profiles.active=docker,prod -jar *.jar"
    volumes:
      - repository-data:/data
    logging:
      options:
        max-size: "100M"


  #
  # Persistence server, which utilizes above services, and other dependent services
  #

  # Persistence service with query interface
  persistence:
    image: public.ecr.aws/fiehnlab/mona-persistence-server:test
    depends_on:
      - webhooks
      - discovery
    entrypoint: bash -c "./wait-for-it.sh webhooks:4444 -t 3600 --strict -- java -Xmx2g -XX:+UseParallelGC -Dspring.config.import=configserver:http://config-server:1111/ -Dspring.profiles.active=docker,prod -jar *.jar"

  # Main authentication service
  auth:
    image: public.ecr.aws/fiehnlab/mona-auth-server:test
    entrypoint: bash -c "./wait-for-it.sh webhooks:4444 -t 3600 --strict -- java -Xmx2g -XX:+UseParallelGC -Dspring.config.import=configserver:http://config-server:1111/ -Dspring.profiles.active=docker,prod -jar *.jar"

  # MoNA similarity service
  similarity:
    image: public.ecr.aws/fiehnlab/mona-similarity:test
    ports:
    - "9999:9999"
    depends_on:
      - webhooks
      - discovery
    entrypoint: bash -c "./wait-for-it.sh webhooks:4444 -t 3600 --strict -- java -Xmx2g -XX:+UseParallelGC -Dspring.config.import=configserver:http://config-server:1111/ -Dspring.profiles.active=docker,prod -jar *.jar"


  #
  # Proxy and additional standalone services
  #

  # The main entrypoint for MoNA
  proxy:
    image: public.ecr.aws/fiehnlab/mona-proxy:test
    ports:
      - "80:8080"
    depends_on:
      - persistence
    environment:
      - VIRTUAL_HOST='mona.fiehnlab.ucdavis.edu'
    entrypoint: bash -c "./wait-for-it.sh webhooks:4444 -t 3600 --strict -- java -Xss4m -Xmx4g -XX:+UseParallelGC -XX:+UseCompressedOops -Dspring.config.import=configserver:http://config-server:1111/ -Dspring.profiles.active=docker,prod -jar *.jar"

  # Download service for scheduling and running download jobs
  downloader:
    image: public.ecr.aws/fiehnlab/mona-download-scheduler:test
    ports:
      - "7777:7777"
    depends_on:
      - persistence
      - webhooks
    entrypoint: bash -c "./wait-for-it.sh webhooks:4444 -t 3600 --strict -- java -Xmx2g -XX:+UseParallelGC -Dspring.config.import=configserver:http://config-server:1111/ -Dspring.profiles.active=docker,prod -jar *.jar"
    volumes:
      - downloader-data:/data
    logging:
      options:
        max-size: "100M"

  # Run scheduled curation tasks
  curationRunner:
    image: public.ecr.aws/fiehnlab/mona-curation-runner:test
    depends_on:
      - persistence
      - webhooks
    entrypoint: bash -c "./wait-for-it.sh webhooks:4444 -t 3600 --strict -- java -Xmx2g -XX:+UseParallelGC -Dspring.config.import=configserver:http://config-server:1111/ -Dspring.profiles.active=docker,prod -jar *.jar"
