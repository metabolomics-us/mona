package edu.ucdavis.fiehnlab.mona.backend.core.io.massbank.parsers

import edu.ucdavis.fiehnlab.mona.backend.core.io.massbank.groups._
import org.scalatest.wordspec.AnyWordSpec
import org.scalatest.matchers.should.Matchers

class RecordSpecificGroupParserTest extends AnyWordSpec with Matchers with RecordSpecificGroupParser {
  "A `RecordSpecificGroupParser`" should {
    "correctly parse complete base metadata" in {
      val input =
        """ACCESSION: PR100283
          |RECORD_TITLE: (R)-3-Amino-4-phenylbutyric acid; LC-ESI-QTOF; MS2; CE:Ramp 5-60 V; [M+H]+
          |DATE: 2016.01.19 (Created 2009.09.10, modified 2012.10.22)
          |AUTHORS: Matsuda F, Suzuki M, Sawada Y, Plant Science Center, RIKEN.
          |LICENSE: CC BY-SA
          |COPYRIGHT: None given
          |PUBLICATION: None
          |COMMENT: Acquisition and generation of the data is financially supported in part by CREST/JST.
          |""".stripMargin

      val expected = RecordSpecificGroup(
        Some("PR100283"),
        Some("(R)-3-Amino-4-phenylbutyric acid; LC-ESI-QTOF; MS2; CE:Ramp 5-60 V; [M+H]+"),
        Some("2016.01.19 (Created 2009.09.10, modified 2012.10.22)"),
        Some("Matsuda F, Suzuki M, Sawada Y, Plant Science Center, RIKEN."),
        Some("CC BY-SA"),
        Some("None given"),
        Some("None"),
        List("Acquisition and generation of the data is financially supported in part by CREST/JST.")
      )

      val result = parse(recordSpecificGroup, input)
      result shouldBe a[Success[_]]
      result.get shouldBe expected
    }

    "accept iterative lines on the 'COMMENT' field as a list" in {
      val input =
        """ACCESSION: KOX00075
          |COMMENT: Peak data in the following records are not open to the public as requested by their authors.
          |COMMENT: Instead MassBank provides the merged spectra for the public.
          |COMMENT: This record was generated by merging the following three MassBank records.
          |COMMENT: [Merging] KO006649 2-Amino-3-phosphonopropionate; LC-ESI-QTOF; MS2; CE:10 V [M+H]+
          |COMMENT: [Merging] KO006650 2-Amino-3-phosphonopropionate; LC-ESI-QTOF; MS2; CE:20 V [M+H]+
          |COMMENT: [Merging] KO006651 2-Amino-3-phosphonopropionate; LC-ESI-QTOF; MS2; CE:30 V [M+H]+
          |COMMENT: [Merging] KO006652 2-Amino-3-phosphonopropionate; LC-ESI-QTOF; MS2; CE:40 V [M+H]+
          |COMMENT: [Merging] KO006653 2-Amino-3-phosphonopropionate; LC-ESI-QTOF; MS2; CE:50 V [M+H]+""".stripMargin

      val expected = RecordSpecificGroup(
        Some("KOX00075"),
        None, None, None, None, None, None,
        List(
          "Peak data in the following records are not open to the public as requested by their authors.",
          "Instead MassBank provides the merged spectra for the public.",
          "This record was generated by merging the following three MassBank records.",
          "[Merging] KO006649 2-Amino-3-phosphonopropionate; LC-ESI-QTOF; MS2; CE:10 V [M+H]+",
          "[Merging] KO006650 2-Amino-3-phosphonopropionate; LC-ESI-QTOF; MS2; CE:20 V [M+H]+",
          "[Merging] KO006651 2-Amino-3-phosphonopropionate; LC-ESI-QTOF; MS2; CE:30 V [M+H]+",
          "[Merging] KO006652 2-Amino-3-phosphonopropionate; LC-ESI-QTOF; MS2; CE:40 V [M+H]+",
          "[Merging] KO006653 2-Amino-3-phosphonopropionate; LC-ESI-QTOF; MS2; CE:50 V [M+H]+"
        )
      )

      val result = parse(recordSpecificGroup, input)
      result shouldBe a[Success[_]]
      result.get shouldBe expected
    }
  }
}
